name: Release

on:
  push:
    branches:
      - release

env:
  REGISTRY: europe-north1-docker.pkg.dev/artifact-registry-5n/dapla-pseudo-maven
  IMAGE: dapla-team-api

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: refs/heads/master

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: zulu
          server-id: github

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1.1.1
        with:
          workload_identity_provider: "projects/848539402404/locations/global/workloadIdentityPools/gh-actions/providers/gh-actions"
          service_account: "gh-actions-dapla-pseudo@artifact-registry-5n.iam.gserviceaccount.com"
          token_format: access_token

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure Git user
        run: |
          git config user.email "ghactions@ssb.no"
          git config user.name "GitHub Actions"

      - name: Perform release and publish jar
        id: release_jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn --batch-mode -P ssb-bip -DskipTests release:prepare
          TAG=$(git describe --abbrev=0 --tags)
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          mvn --batch-mode -P ssb-bip -DskipTests release:perform
          ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
          echo "artifact_id=${ARTIFACT_ID}" >> $GITHUB_OUTPUT
          ARTIFACT_PATH=$(realpath ./target/$ARTIFACT_ID*.jar)
          echo "artifact_path=${ARTIFACT_PATH}" >> $GITHUB_OUTPUT

      - env:
          EVENT_CONTEXT: ${{ toJSON(github.event) }}
        run: |
          echo $EVENT_CONTEXT

      - name: Create GitHub release draft
        uses: release-drafter/release-drafter@v5
        id: create_github_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.release_jar.outputs.tag }}

      - name: Publish GitHub release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_github_release.outputs.id }}

      - name: Extract build metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=raw,value=${{ steps.release_jar.outputs.tag }}, enable=true

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Build and push docker image to Artifact Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
